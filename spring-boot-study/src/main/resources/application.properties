# LOGGING
logging.path=D:\log
logging.level.org.springframework=INFO
logging.level.org.apache.kafka=INFO
#set com.xq.spstudy.controller log level
logging.level.com.xq.spstudy.controller=ERROR

com.neo.title=hello, this is title
com.neo.description=hello, this is description


# Netty configuration
sks.netty.hostname=0.0.0.0
sks.netty.port=3636

# Kafka
spring.kafka.bootstrap-servers=127.0.0.1:9092
#spring.kafka.client-id= # Id to pass to the server when making requests; used for server-side logging.
#spring.kafka.producer.acks= # Number of acknowledgments the producer requires the leader to have received before considering a request complete.
#spring.kafka.producer.batch-size= # Number of records to batch before sending.
#spring.kafka.producer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.
#spring.kafka.producer.buffer-memory= # Total bytes of memory the producer can use to buffer records waiting to be sent to the server.
#spring.kafka.producer.client-id= # Id to pass to the server when making requests; used for server-side logging.
#spring.kafka.producer.compression-type= # Compression type for all data generated by the producer.
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.BytesSerializer
#spring.kafka.producer.retries= # When greater than zero, enables retrying of failed sends.
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.BytesSerializer
#spring.kafka.properties.*= # Additional properties used to configure the client.
#spring.kafka.ssl.key-password= # Password of the private key in the key store file.
#spring.kafka.ssl.keystore-location= # Location of the key store file.
#spring.kafka.ssl.keystore-password= # Store password for the key store file.
#spring.kafka.ssl.truststore-location= # Location of the trust store file.
#spring.kafka.ssl.truststore-password= # Store password for the trust store file.


# APACHE KAFKA (KafkaProperties)
spring.kafka.bootstrap-servers=127.0.0.1:9092
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.group-id=test
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.BytesDeserializer
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.BytesDeserializer
spring.kafka.listener.concurrency=2